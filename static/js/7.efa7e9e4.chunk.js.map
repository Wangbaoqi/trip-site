{"version":3,"sources":["api/flyIndex.ts","views/airport/flyIndex/flyIndexAPI.ts","views/airport/flyIndex/FlyIndex.tsx"],"names":["baseUrl","process","getInterAirportListHotAPI","params","request","url","data","method","getInterAirportListIndexAPI","getInterAirportListOtherAPI","getAirportList","cacheGet","then","res","a","console","log","cityCacheData","inland","inter","hl","pl","rg","historyHot","rname","areal","p","cl","indexAZ","unshift","cacheSet","JSON","stringify","catch","err","getCalenderHoliday","holidayList","list","FlyIndex","useState","toggleType","setToggleType","dispatch","useDispatch","useEffect","className","type","value","handleToggle","e","changeTripType"],"mappings":"0NAEMA,EAAUC,wEAQHC,EAA4B,SAACC,GAAD,OAAYC,YAAQ,CAC3DC,IAAI,GAAD,OAAKL,EAAL,oCACHM,KAAMH,EACNI,OAAQ,SAGGC,EAA8B,SAACL,GAAD,OAAYC,YAAQ,CAC7DC,IAAI,GAAD,OAAKL,EAAL,sCACHM,KAAMH,EACNI,OAAQ,SAGGE,EAA8B,SAACN,GAAD,OAAYC,YAAQ,CAC7DC,IAAI,GAAD,OAAKL,EAAL,sCACHM,KAAMH,EACNI,OAAQ,SChBGG,EAAiB,WAE5B,IDPoCP,ECOCQ,YAAS,6BDPVR,ECUZ,GDVuBC,YAAQ,CACvDC,IAAI,GAAD,OAAKL,EAAL,4BACHM,KAAMH,EACNI,OAAQ,SCOoBK,KAA1B,uCAA+B,WAAMC,GAAN,qCAAAC,EAAA,6DAC7BC,QAAQC,IAAIH,EAAK,iBACXI,EAAgB,CACpBC,OAAQ,GACRC,MAAO,KAEKD,OAASL,EAAIP,KANE,SAOMJ,EAA0B,IAPhC,2BAOrBI,KAAQc,UAPa,MAOR,GAPQ,YAQMZ,EAA4B,IARlC,4BAQrBF,KAAQe,UARa,MAQR,GARQ,YASMZ,EAA4B,IATlC,qBASrBH,KAAQgB,GAEVC,EAAa,CACjBC,MAAO,4BACPC,MAAO,CACL,CACEC,EAAG,kFACHC,GAAI,IACJ,CACAD,EAAG,eACHC,GAAIP,KAIJQ,EAAU,CACdJ,MAAO,MACPC,MAAOJ,IAhBOC,OATa,MASR,GATQ,GA2B1BO,QAAQD,GACXN,EAAGO,QAAQN,GACXN,EAAcE,MAAQ,CAAEC,KAAIC,KAAIC,MAChCQ,YAAS,0BAA2BC,KAAKC,UAAUf,IA9BtB,4CAA/B,uDA+BGgB,OAAM,SAAAC,GACPnB,QAAQC,IAAIkB,EAAK,uBAKVC,EAAqB,WAEhC,ID1BoChC,EC0BIQ,YAAS,uBD1BbR,EC6BZ,GD7BuBC,YAAQ,CACvDC,IAAI,GAAD,OAAKL,EAAL,gCACHM,KAAMH,EACNI,OAAQ,SC0BoBK,MAAK,SAAAC,GAAQ,IAAD,EAC9BuB,GAAc,UAAAvB,EAAIP,YAAJ,eAAU+B,OAAQ,GACtCP,YAAS,oBAAqBC,KAAKC,UAAUI,Q,wBCdpCE,UArCE,WACf,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAWC,cACjBC,qBAAU,WACRlC,IACAyB,MACC,IAmBH,OACE,qBAAKU,UAAU,MAAf,SACE,0BAASA,UAAU,cAAnB,UACE,cAAC,IAAD,CAAWvC,KAdJ,CACX,CACEwC,KAAM,EACNC,MAAO,gBAET,CACED,KAAM,EACNC,MAAO,iBAOkBP,WAAYA,EAAYQ,aApBhC,SAACC,GACpBlC,QAAQC,IAAIiC,GACZR,EAAcQ,EAAEH,MAChBJ,EAASQ,YAAeD,EAAEH,UAkBtB,cAAC,IAAD,IACA,qBAAKD,UAAU","file":"static/js/7.efa7e9e4.chunk.js","sourcesContent":["import request from '@/utils/request'\n\nconst baseUrl = process.env.REACT_APP_BASE_URL\n\nexport const getAirportListLandAPI = (params) => request({\n  url: `${baseUrl}/flyIndex/getAirportList`,\n  data: params,\n  method: 'get'\n});\n\nexport const getInterAirportListHotAPI = (params) => request({\n  url: `${baseUrl}/flyIndex/getInterAirportListHot`,\n  data: params,\n  method: 'get'\n});\n\nexport const getInterAirportListIndexAPI = (params) => request({\n  url: `${baseUrl}/flyIndex/getInterAirportListIndex`,\n  data: params,\n  method: 'get'\n});\n\nexport const getInterAirportListOtherAPI = (params) => request({\n  url: `${baseUrl}/flyIndex/getInterAirportListOther`,\n  data: params,\n  method: 'get'\n});\nexport const getCalenderHolidayAPI = (params) => request({\n  url: `${baseUrl}/flyIndex/getCalenderHoliday`,\n  data: params,\n  method: 'get'\n});\n","import { cacheGet, cacheSet } from '@/utils/cache';\nimport { \n  getAirportListLandAPI, \n  getInterAirportListHotAPI, \n  getInterAirportListIndexAPI,\n  getInterAirportListOtherAPI,\n  getCalenderHolidayAPI\n} from '@/api/flyIndex';\n\nexport const getAirportList = () => {\n\n  const cityCacheData: string | null = cacheGet('AIRPORT_LIST_CITY_CACHE');\n\n  if(!cityCacheData) {\n    getAirportListLandAPI({}).then(async(res) => {\n      console.log(res, 'airport list');\n      const cityCacheData = {\n        inland: {},\n        inter: {}\n      }\n      cityCacheData.inland = res.data;\n      const { data: { hl = []} } = await getInterAirportListHotAPI({})\n      const { data: { pl = []} } = await getInterAirportListIndexAPI({})\n      const { data: { rg = []} } = await getInterAirportListOtherAPI({})\n\n      const historyHot = {\n        rname: '历史/热门',\n        areal: [\n          {\n            p: '当前/历史（国家、地区或城市',\n            cl: []\n          },{\n            p: '热门',\n            cl: hl\n          }\n        ]\n      }\n      const indexAZ = {\n        rname: 'A-Z',\n        areal: pl\n      }\n      rg.unshift(indexAZ);\n      rg.unshift(historyHot);\n      cityCacheData.inter = { hl, pl, rg }\n      cacheSet('AIRPORT_LIST_CITY_CACHE', JSON.stringify(cityCacheData));\n    }).catch(err => {\n      console.log(err, 'getAirport fail');\n    })\n  }\n}\n\nexport const getCalenderHoliday = () => {\n\n  const holidayCacheData: string | null = cacheGet('HOLIDAY_DAY_CACHE');\n  if(!holidayCacheData) {\n\n    getCalenderHolidayAPI({}).then(res => {\n      const holidayList = res.data?.list || '';\n      cacheSet('HOLIDAY_DAY_CACHE', JSON.stringify(holidayList));\n\n    })\n  }\n\n}","import { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { FlyHeader, FlyCard } from '@/components/index'\nimport { getAirportList, getCalenderHoliday } from './flyIndexAPI';\nimport { changeTripType } from \"./flyIndexSlice\";\nimport \"./FlyIndex.scss\";\n\nconst FlyIndex = () => {\n  const [toggleType, setToggleType] = useState(0);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getAirportList();\n    getCalenderHoliday();\n  }, []);\n\n  const handleToggle = (e) => {\n    console.log(e);\n    setToggleType(e.type);\n    dispatch(changeTripType(e.type))\n  };\n\n  const data = [\n    {\n      type: 0,\n      value: \"单程\",\n    },\n    {\n      type: 1,\n      value: \"往返\",\n    }\n  ];\n\n  return (\n    <div className=\"fly\">\n      <section className=\"fly__flight\">\n        <FlyHeader data={data} toggleType={toggleType} handleToggle={handleToggle}/>\n        <FlyCard />\n        <div className=\"fly__history\"></div>\n      </section>\n\n    </div>\n  );\n};\n\nexport default FlyIndex;\n"],"sourceRoot":""}
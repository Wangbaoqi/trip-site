{"version":3,"sources":["views/custom/ReactScroll.tsx"],"names":["ReactScroll","useEffect","Events","scrollEvent","register","console","log","arguments","remove","className","to","spy","smooth","duration","activeClass","delay","name","id"],"mappings":"sIAAA,2CAuPeA,UA3OK,WAMlBC,qBAAU,WAQR,OAPAC,SAAOC,YAAYC,SAAS,SAAS,WACnCC,QAAQC,IAAI,QAASC,cAGvBL,SAAOC,YAAYC,SAAS,OAAO,WACjCC,QAAQC,IAAI,MAAOC,cAEd,WACLL,SAAOC,YAAYK,OAAO,SAC1BN,SAAOC,YAAYK,OAAO,UAE3B,IAsCH,OACE,gCACE,qBAAKC,UAAU,yCAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,8BAIE,qBAAIA,UAAU,GAAd,UACE,6BACE,cAAC,OAAD,CACEA,UAAU,QACVC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,IALZ,sBAUF,6BACE,cAAC,OAAD,CACEJ,UAAU,QACVC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,IALZ,sBAUF,6BACE,cAAC,OAAD,CACEJ,UAAU,QACVC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,IALZ,sBAUF,6BACE,cAAC,OAAD,CACEC,YAAY,SACZL,UAAU,QACVC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,IANZ,sBAWF,6BACE,cAAC,OAAD,CACEC,YAAY,SACZL,UAAU,QACVC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,IACVE,MAAO,IAPT,gCAYF,6BACE,cAAC,OAAD,CACED,YAAY,SACZL,UAAU,QACVC,GAAG,SACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,IANZ,wCAwBV,cAAC,UAAD,CAASG,KAAK,QAAQP,UAAU,UAAhC,oBAIA,cAAC,UAAD,CAASO,KAAK,QAAQP,UAAU,UAAhC,oBAIA,cAAC,UAAD,CAASO,KAAK,QAAQP,UAAU,UAAhC,oBAIA,cAAC,UAAD,CAASO,KAAK,QAAQP,UAAU,UAAhC,oBAIA,cAAC,UAAD,CAASO,KAAK,QAAQP,UAAU,UAAhC,oBAIA,qBAAKQ,GAAG,SAASR,UAAU,UAA3B","file":"static/js/8.edba8ffc.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport {\n  Link,\n  Element,\n  Events,\n  animateScroll as scroll,\n  scrollSpy,\n  scroller\n} from \"react-scroll\";\n\nimport './index.scss';\n\nconst ReactScroll = () => {\n  // constructor(props) {\n  //   super(props);\n  //   this.scrollToTop = this.scrollToTop.bind(this);\n  // }\n\n  useEffect(() => {\n    Events.scrollEvent.register(\"begin\", function () {\n      console.log(\"begin\", arguments);\n    });\n\n    Events.scrollEvent.register(\"end\", function () {\n      console.log(\"end\", arguments);\n    });\n    return () => {\n      Events.scrollEvent.remove(\"begin\");\n      Events.scrollEvent.remove(\"end\");\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    scroll.scrollToTop();\n  };\n  // scrollTo() {\n  //   scroller.scrollTo('scroll-to-element', {\n  //     duration: 800,\n  //     delay: 0,\n  //     smooth: 'easeInOutQuart'\n  //   })\n  // }\n  // scrollToWithContainer() {\n\n  //   let goToContainer = new Promise((resolve, reject) => {\n\n  //     Events.scrollEvent.register('end', () => {\n  //       resolve();\n  //       Events.scrollEvent.remove('end');\n  //     });\n\n  //     scroller.scrollTo('scroll-container', {\n  //       duration: 800,\n  //       delay: 0,\n  //       smooth: 'easeInOutQuart'\n  //     });\n\n  //   });\n\n  //   goToContainer.then(() =>\n  //     scroller.scrollTo('scroll-container-second-element', {\n  //       duration: 800,\n  //       delay: 0,\n  //       smooth: 'easeInOutQuart',\n  //       containerId: 'scroll-container'\n  //     }));\n  // }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-default navbar-fixed-top\">\n        <div className=\"container-fluid\">\n          <div\n            // className=\"collapse navbar-collapse\"\n            // id=\"bs-example-navbar-collapse-1\"\n          >\n            <ul className=\"\">\n              <li>\n                <Link\n                  className=\"test1\"\n                  to=\"test1\"\n                  spy={true}\n                  smooth={true}\n                  duration={500}\n                >\n                  Test 1\n                </Link>\n              </li>\n              <li>\n                <Link\n                  className=\"test2\"\n                  to=\"test2\"\n                  spy={true}\n                  smooth={true}\n                  duration={500}\n                >\n                  Test 2\n                </Link>\n              </li>\n              <li>\n                <Link\n                  className=\"test3\"\n                  to=\"test3\"\n                  spy={true}\n                  smooth={true}\n                  duration={500}\n                >\n                  Test 3\n                </Link>\n              </li>\n              <li>\n                <Link\n                  activeClass=\"active\"\n                  className=\"test4\"\n                  to=\"test4\"\n                  spy={true}\n                  smooth={true}\n                  duration={500}\n                >\n                  Test 4\n                </Link>\n              </li>\n              <li>\n                <Link\n                  activeClass=\"active\"\n                  className=\"test5\"\n                  to=\"test5\"\n                  spy={true}\n                  smooth={true}\n                  duration={500}\n                  delay={1000}\n                >\n                  Test 5 ( delay )\n                </Link>\n              </li>\n              <li>\n                <Link\n                  activeClass=\"active\"\n                  className=\"test6\"\n                  to=\"anchor\"\n                  spy={true}\n                  smooth={true}\n                  duration={500}\n                >\n                  Test 6 (anchor)\n                </Link>\n              </li>\n              {/* <li> <a onClick={() => scroll.scrollTo(100)}>Scroll To 100!</a></li>\n                  <li> <a onClick={() => scroll.scrollToBottom()}>Scroll To Bottom</a></li>\n                  <li> <a onClick={() => scroll.scrollMore(500)}>Scroll 500 More!</a></li>\n                  <li> <a onClick={() => scroll.scrollMore(1000, { delay: 1500 })}>Scroll 1000 More! ( delay ) </a></li>\n                  <li><Link activeClass=\"active\" className=\"test8\" to=\"same\" spy={true} smooth={true} duration={500}>Same target</Link></li>\n                  <li><Link activeClass=\"active\" className=\"test9\" to=\"same\" spy={true} smooth={true} duration={500}>Same target</Link></li>\n                  <li><a className=\"test1\" to=\"test1\" onClick={() => this.scrollTo()} >Scroll to element</a></li>\n                  <li><a className=\"test1\" to=\"test1\" onClick={() => this.scrollToWithContainer()} >Scroll to element within container</a></li> */}\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n      <Element name=\"test1\" className=\"element\">\n        test 1\n      </Element>\n\n      <Element name=\"test2\" className=\"element\">\n        test 2\n      </Element>\n\n      <Element name=\"test3\" className=\"element\">\n        test 3\n      </Element>\n\n      <Element name=\"test4\" className=\"element\">\n        test 4\n      </Element>\n\n      <Element name=\"test5\" className=\"element\">\n        test 5\n      </Element>\n\n      <div id=\"anchor\" className=\"element\">\n        test 6 (anchor)\n      </div>\n\n      {/* <Link activeClass=\"active\" to=\"firstInsideContainer\" spy={true} smooth={true} duration={250} containerId=\"containerElement\" style={{ display: 'inline-block', margin: '20px' }}>\n            Go to first element inside container\n        </Link>\n\n          <Link activeClass=\"active\" to=\"secondInsideContainer\" spy={true} smooth={true} duration={250} containerId=\"containerElement\" style={{ display: 'inline-block', margin: '20px' }}>\n            Go to second element inside container\n        </Link>\n\n          <Element name=\"test7\" className=\"element\" id=\"containerElement\" style={{\n            position: 'relative',\n            height: '200px',\n            overflow: 'scroll',\n            marginBottom: '100px'\n          }}>\n\n            <Element name=\"firstInsideContainer\" style={{\n              marginBottom: '200px'\n            }}>\n              first element inside container\n          </Element>\n\n            <Element name=\"secondInsideContainer\" style={{\n              marginBottom: '200px'\n            }}>\n              second element inside container\n          </Element>\n          </Element>\n\n\n          <Element id=\"same\" className=\"element\">\n            Two links point to this\n        </Element>\n\n\n          <Element name=\"scroll-to-element\" className=\"element\">\n            Scroll to element\n        </Element>\n\n          <Element className=\"element\" id=\"scroll-container\" style={{\n            position: 'relative',\n            height: '200px',\n            overflow: 'scroll',\n            marginBottom: '100px'\n          }}>\n\n            <Element name=\"scroll-container-first-element\" style={{\n              marginBottom: '200px'\n            }}>\n              first element inside container\n          </Element>\n\n            <Element name=\"scroll-container-second-element\" style={{\n              marginBottom: '200px'\n            }}>\n              second element inside container\n          </Element>\n          </Element>\n\n          <a onClick={this.scrollToTop}>To the top!</a> */}\n    </div>\n  );\n};\n\nexport default ReactScroll\n"],"sourceRoot":""}